/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        
        int len=nums.size();
         
        int mid=(len)/2;
        if(nums.empty()){
            return 0;
        }
        TreeNode *head= new TreeNode(nums[mid]);
        if(len<2)
            return head;
        maketree(nums, 0, mid-1,head);
        maketree(nums, mid+1, len-1, head);
        
        return head;
    }
    void maketree(vector<int> arr, int begin, int end, TreeNode* node){
        
        if(end<begin)
            return;
        int mid=(begin+end)/2;
        
        if(arr[mid]>node->val){
            node->right=new TreeNode(arr[mid]);
            maketree(arr, mid+1, end, node->right);
            maketree(arr, begin, mid-1, node->right);
        }
        else{
            node->left=new TreeNode(arr[mid]);
            maketree(arr, begin, mid-1, node->left);
            maketree(arr, mid+1, end, node->left);

        }
        
    }
};
